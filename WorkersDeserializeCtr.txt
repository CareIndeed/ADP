public class WorkersDeserializeCtr {

    //public List<WorkersJson> wklist{get;set;}
    
    
    public PageReference deserialize(){
        
        String accessToken = CareIndeedWebServiceHelper.getAccessToken();
	    String endpoint = 'https://api.adp.com/hr/v2/workers';
	    Http http = new Http();
	    HttpRequest req = new HttpRequest();
	    HttpResponse res = new HttpResponse();
	        req.setMethod('GET');
	        req.setHeader('Authorization', 'Bearer '+accessToken);
	        req.setEndpoint(endpoint);
	        req.setTimeout(120000);
	        
	        res = http.send(req);
	        String responsebody = res.getBody();
	        System.debug('@@@@@@@@@@responsebody@@@'+responsebody);
	         
	    map<String, Object> wklist = (map<String, Object>) JSON.deserializeUntyped(responsebody);
		System.debug('@@@@@@wkj@@@@@'+wklist);
		
		List<Care_Indeed_Contact__c> carelist = new List<Care_Indeed_Contact__c>();
		 id rectypeid = Schema.SObjectType.Care_Indeed_Contact__c.getRecordTypeInfosByName().get('Worker').getRecordTypeId();
		List<Object> worker = (List<Object>)wklist.get('workers');
		for(Object cls: worker){
		    Map<String, Object> workerdata = (Map<String, Object>)cls;
		    
		    Care_Indeed_Contact__c care = new Care_Indeed_Contact__c();
		        care.ADP_PersonOID__c = (String)workerdata.get('associateOID');
		         care.recordtypeid = rectypeid;
		         
		         Map<String, Object> persondata = (Map<String, Object>)workerdata.get('person');
                 Map<String, Object> legalName  = (Map<String, Object>)persondata.get('legalName');
		         care.Name = (String)legalName.get('formattedName');
		         
		         
		         carelist.add(care);
		    
		}
		
		insert carelist;
		
        PageReference pageRef = new PageReference('/Care_Indeed_Contact__c/list?filterName=Recent');

        pageRef.setRedirect(true);
		return pageRef;
    }
    
    
}